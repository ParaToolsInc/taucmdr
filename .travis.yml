language: python
python:
  - "2.6"
  - "2.7"
  - "3.2"
  - "nightly"

branches:
  except:
    - gh-pages

git:
  depth: 9999

sudo: false

cache:
  ccache: true
  apt: true
  directories:
    - "${HOME}/mpich"
    - "${HOME}/.ccache"

env:
  global:
    - INSTALLDIR="$HOME/taucmdr-test"
    - CC="ccache gcc${SUF:-}" CXX="ccache g++${SUF:-}" FC="ccache gfortran${SUF:-}" F77="ccache gfortran${SUF:-}"

matrix:
  include:
    - &baseconf # define an anchor and use the <<: YAML merge operator to avoid repitition
      python: 2.7
      cache:
        ccache: true
        apt: true
        directories:
          - "${HOME}/mpich"
          - "${HOME}/.ccache"
      addons:
        apt:
          packages: ['gcc-4.4', 'g++-4.4', 'gfortran-4.4', 'ccache']
      env: GCC=-4.4 MPI=none
    -
      <<: *baseconf
      env: GCC=-4.4 MPI=MPICH
    - &fourfive
      <<: *baseconf
      addons:
        apt:
          packages: ['gcc-4.5', 'g++-4.5', 'gfortran-4.5', 'ccache']
      env: GCC=-4.5 MPI=none
    -
      <<: *fourfive
      env: GCC=-4.5 MPI=MPICH
    - &foursix
      <<: *baseconf
      addons:
        apt:
          packages: ['gcc-4.6', 'g++-4.6', 'gfortran-4.6', 'ccache']
      env: GCC=-4.6 MPI=none
    -
      <<: *foursix
      env: GCC=-4.6 MPI=MPICH
    - &fourseven
      <<: *baseconf
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['gcc-4.7', 'g++-4.7', 'gfortran-4.7', 'ccache']
      env: GCC=-4.7 MPI=none
    -
      <<: *fourseven
      env: GCC=-4.7 MPI=MPICH
    - &foureight
      <<: *baseconf
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['gcc-4.8', 'g++-4.8', 'gfortran-4.8', 'ccache']
      env: GCC=-4.8 MPI=none
    -
      <<: *foureight
      env: GCC=-4.8 MPI=MPICH
    - &fournine
      <<: *baseconf
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['gcc-4.9', 'g++-4.9', 'gfortran-4.9', 'ccache']
      env: GCC=-4.9 MPI=none
    -
      <<: *fournine
      env: GCC=-4.9 MPI=MPICH
    - &five
      <<: *baseconf
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['gcc-5', 'g++-5', 'gfortran-5', 'ccache']
      env: GCC=-5 MPI=none

    -
      <<: *five
      env: GCC=-5 MPI=MPICH
    - &six
      <<: *baseconf
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['gcc-6', 'g++-6', 'gfortran-6', 'ccache']
      env: GCC=-6 MPI=none
    -
      <<: *six
      env: GCC=-6 MPI=MPICH

before_install:
  - if [[ ! -d "${HOME}/.ccache" ]] ; then mkdir "${HOME}/.ccache" ; else ls -a "${HOME}/.ccache" ; fi
  - if [[ ! -d "${HOME}/bin" ]] ; then mkdir "${HOME}/bin" && export PATH="${HOME}/bin:${PATH}"; fi
  - if [[ ! -d "${HOME}/mpich/build" ]] ; then mkdir -p "${HOME}/mpich/build" ; fi
  - if [[ ! -d "${HOME}/usr" ]] ; then mkdir -p "${HOME}/usr/{bin,lib,share,include,lib64,libexec}" && export PATH="${HOME}/usr/bin:${PATH}"; fi
  - |
    if [[ -n "${encrypted_c48b4c75cf28_key}" ]] ; then # not a PR or someone else's repo
      openssl aes-256-cbc -K $encrypted_c48b4c75cf28_key -iv $encrypted_c48b4c75cf28_iv -in id_rsa_Travis2GH.enc -out id_rsa_Travis2GH -d \
      && chmod 600 id_rsa_Travis2GH \
      && printf '#!/usr/bin/env bash\nssh -i %s/id_rsa_Travis2GH "$@"\n' "$(pwd)" > "${HOME}/bin/ssh_to_GH" \
      && chmod +x "${HOME}/bin/ssh_to_GH" \
      && export GIT_SSH="${HOME}/bin/ssh_to_GH" \
      && echo "Testing ssh to github.com" && ($GIT_SSH -T "git@github.com" || true)
    fi
  - unset -v ${!encrypted_@} # unset secret encrypted variables
  - git --version
  - env | grep -iv 'token\|key\|encrypt' | sort # scrub tokens from output & sort
  - mount
  - ls -l $(which gcc) && gcc --version # dump info about compilers
  - ls -l $(which g++) && g++ --version
  - if which gfortran; then ls -l $(which gfortran) && gfortran --version ; fi
  - if ((RANDOM % 2 == 0)); then SUF="${GCC:-}" ; else SUF="" ; fi # randomize keeping suffix on links
  - export CC="ccache gcc${SUF}" && export CXX="ccache g++${SUF}" && export FC="ccache gfortran${SUF}" && export F77="ccache gfortran${SUF}" || true
  - echo "\$SUF=${SUF}, \$CC=${CC}, \$CXX=${CXX}, \$FC=${FC} \$F77=${F77}"
  - if [[ -n "${GCC}" ]]; then ls -l "$(which gcc$GCC)"  && ln -s "$(which gcc$GCC)" "${HOME}/bin/gcc${SUF}" ; fi
  - if [[ -n "${GCC}" ]]; then ls -l "$(which g++$GCC)"  && ln -s "$(which g++$GCC)" "${HOME}/bin/g++${SUF}" ; fi
  - if [[ -n "${GCC}" ]]; then ls -l "$(which gfortran$GCC)" && ln -s "$(which gfortran$GCC)" "${HOME}/bin/gfortran${SUF}"; fi
  - $CC --version && $CXX --version && $FC --version || true # allow missing gfortran
  - |
    if [[ "${MPI:-}" == "MPICH" ]]; then
      cd "${HOME}/mpich" \
      && ([[ -f "mpich-3.2.tar.gz" ]] || wget --continue --no-clobber 'http://www.mpich.org/static/downloads/3.2/mpich-3.2.tar.gz') \
      && ([[ -d "mpich-3.2" ]] || tar -xzvf mpich-3.2.tar.gz --keep-newer-files || true) \
      && cd build \
      && ([[ -f Makefile ]] || ../mpich-3.2/configure --prefix="${HOME}/usr") \
      && make -j && make install \
      && cd "${TRAVIS_BUILD_DIR}" \
      && which mpicc && mpicc --version && which mpif90 && mpif90 --version || true
    fi

# Test ./configure && make install while boostraping Python 2.7 environment and required packages.
install:
  - ./configure --prefix="$INSTALLDIR"
  - make install || (tail -1000 "$HOME/.tau/debug_log" && false)
  - export PATH="$INSTALLDIR/conda/bin:$PATH"
  - which python
  - which pip
  - pip install --prefix "$INSTALLDIR/conda" -r requirements.txt

script:
  - coverage run setup.py test

after_failure:
  - tail -1000 "$HOME/.tau/debug_log"

after_success:
  - ls -l "${HOME}/.ccache"

after_script:
  - codecov --env GCC MPI

deploy:
  provider: script
  script: python setup.py build_sphinx --update-gh-pages --gh-origin-url "git@github.com:${TRAVIS_REPO_SLUG}.git" --gh-user-name "Travis-CI-bot" --gh-user-email "info@paratools.com" --gh-commit-msg "Updated documentation on Travis-CI job $TRAVIS_JOB_NUMBER at commit $TRAVIS_COMMIT"
  skip_cleanup: true
  on:
    branch: master
    condition: $TRAVIS_OS_NAME = linux && $TRAVIS_PYTHON_VERSION = 2.7
    repo: ParaToolsInc/taucmdr # Don't try to deploy on private forks

notifications:
  email:
    recipients:
      - taucmdr-notify@paratools.com
    on_success: always  # options: [always|never|change]
    on_failure: always
    on_start: always
  webhooks:
    urls: # gitter.im announcement
      secure: TQIzGX9yWDc+ayKNpWmNjCCucaGCwt9CYeThbzdmGsA30hJkRRuDNdx5ZDvknRktV+h+QYgLGLR3ueVUuGL0/kf23vPUZD6kTTY0c3ZJ4fonDx5Ydr+zhc1iJzO/Ord1tnY5xxfvKpfWEUekFQT5SSJMt61CQoNmVSDdTDpFcMC4GEzeQD6fdP0BxgiFvw4UOnfU/poM9OmjaVdKoFyax1+gub4mC/GG9faxK6IdtOAtPsGcUOpzBypwj3NRGgDuq+jErnvm3tLitVJz8h1ab5eQMgTAlCK8q3w7x/WaWxsVXnErjDqJIGs9mpxmyOJERoRv7hQdlAZtKlIZsdGpE7O9B9ooBE/zAfRqGHee5CsA/UKx6XDt9h0rYt/zNJ5RcIrbHRZMilwdC4PXXjN7FNNkpDp0LhhpzM19tZx9+Zb/QAGOTwIDq5adQfiF9ctE7OAlvqnSbvhTL0bzLmYthIURc9nBks4uqUAKq/LEnHz2CgiL8fGaJbUXqGSBc/prKYREa9ckfBdjFfngSnLBJB6oLKQBGRA/Y8thi7etu8TZD9CsWcBJhXFJTPkFArFkJVRpURNpQ0OIS54q0bmTW+dPbSJ95v2GEttCuAIyqDgffuwqqVYx0KmaMHKvxUGx0Mu8uC9Mo5FLEDiM05mE/lAgkK9wgwbgFW+A5g2t7x8=
    on_success: always  # options: [always|never|change]
    on_failure: always
    on_start: always
