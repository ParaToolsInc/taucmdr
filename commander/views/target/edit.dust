{> sidebar-layout /}
{<title}
  {?target}
    {target.name}
  {:else}
    New Target
  {/target}
{/title}

{<content}
<h1 class="page-header">
  {?target}
    {target.name}
  {:else}
    New Target
  {/target}
</h1>
<div class="row">
  <div class="col-xs-12 col-sm-8 col-md-6 col-sm-offset-2 col-md-offset-3">
    <div class="alert alert-danger {^error}hidden{/error}" id="error_alert">
      <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span aria-hidden="true">&times;</span>
      </button>
      <p id="error_alert_message">
      {?error_message}
        {error_message}
      {:else}
        {error}
      {/error_message}
      </p>
    </div>
  </div>
</div>

<form role="form" action="/target/{?target}update{:else}create{/target}" method="post" onsubmit="return validateForm();">
  <input type="hidden" name="user" id="user" value="{user.id}"/>
  <input type="hidden" name="id" id="id" value="{target.id}"/>
  <div class="row">
    <div class="col-lg-12">
      <div class="form-group has-feedback {?name_error}has-error{/name_error}">
        <label for="name">Target Name</label>
        <input type="text" name="name" id="name" class="form-control input-lg" placeholder="Target Name" value="{target.name}" tabindex="1"/>
        <span class="glyphicon glyphicon-remove form-control-feedback {^name_error}hidden{/name_error}" aria-hidden="true"></span>
      </div>
    </div>
  </div>

  <hr>
  <div class="row">
    <div class="col-xs-12 col-md-4 col-md-offset-2">
      <input type="submit" value="{?target}Update{:else}Create{/target} Target" class="btn btn-primary btn-block" tabindex="9">
    </div>
    <div class="col-xs-12 col-md-4">
      <a href="/target" class="btn btn-default btn-block" role="button">Cancel</a>
    </div>
  </div>
  <input type="hidden" name="_csrf" value="{_csrf}"/>
</form>
{/content}

{<script}
<script src="/js/validator.min.js"></script>
<script>
  function validateForm() {
    var validateField = function(selector, validator, message) {
      var field = $(selector)
        , parent = field.parent()
        , error_alert = $("#error_alert")
        , error_alert_message = $("#error_alert_message")
        , valid = validator(field.val());
      if (!valid) {
        parent.addClass('has-error');
        parent.removeClass('has-success');
        parent.children('.glyphicon').removeClass('hidden');
        error_alert_message.text(message || "Unknown error");
        error_alert.removeClass('hidden');
      } else {
        parent.addClass('has-success');
        parent.removeClass('has-error');
        parent.children('.glyphicon').addClass('hidden');
        error_alert.addClass('hidden');
      }
      return valid;
    };

    var fields = {
      "#name": [ 
        function (x) { return validator.trim(x).length > 0 },
        'Please give this target a name' ]
    };

    for (key in fields) {
      var field = fields[key]
        , valid = validateField(key, field[0], field[1]);
      if (!valid) return false;
    }
    return true;
  }
</script>
{/script}
