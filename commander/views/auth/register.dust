{> layout /}
{<title}Registration{/title}

{<content}

<div class="container-fluid">
  <div class="row">
    <div class="col-xs-12 col-sm-8 col-md-6 col-sm-offset-2 col-md-offset-3">
      <form id="regform" role="form" action="/auth/local/register" method="post">
        <h2>TAU Commander Registration</h2>
        <hr>       
        <div class="alert alert-danger {^error}hidden{/error}" id="error_alert">
            <p id="error_alert_message">
            {?error_message}
              {error_message}
            {:else}
              {error}
            {/error_message}
            </p>
        </div>

        <div class="row">
          <div class="col-lg-12">
            <div class="form-group has-feedback {?email_error}has-error{/email_error}">
              <label class="control-label" for="email">Email Address</label>
              <input type="email" name="email" id="email" class="form-control input-lg" placeholder="Email Address" value="{email}" tabindex="1" required>
              <span class="glyphicon glyphicon-remove form-control-feedback {^email_error}hidden{/email_error}" aria-hidden="true"></span>
              <span class="sr-only">(error)</span>
            </div>
          </div>
        </div>

        <div class="row">
          <div class="col-lg-12">
            <div class="form-group has-feedback {?username_error}has-error{/username_error}">
              <label class="control-label" for="username">Username</label>
              <input type="text" name="username" id="username" class="form-control input-lg" placeholder="Username" value="{username}" tabindex="2" required>
              <span class="glyphicon glyphicon-remove form-control-feedback {^username_error}hidden{/username_error}" aria-hidden="true"></span>
            </div>
          </div>
        </div>

        <div class="row">
          <div class="col-xs-12 col-sm-6 col-md-6">
            <div class="form-group has-feedback {?password_error}has-error{/password_error}">
              <label class="control-label" for="password">Password</label>
              <input type="password" name="password" id="password" class="form-control input-lg" placeholder="Password" tabindex="3" required>
              <span class="glyphicon glyphicon-remove form-control-feedback {^password_error}hidden{/password_error}" aria-hidden="true"></span>
            </div>
          </div>
          <div class="col-xs-12 col-sm-6 col-md-6">
            <div class="form-group has-feedback {?password_error}has-error{/password_error}">
              <label class="control-label" for="confirm_password">Confirm Password</label>
              <input type="password" name="confirm_password" id="confirm_password" class="form-control input-lg" placeholder="Confirm Password" tabindex="4" required>
              <span class="glyphicon glyphicon-remove form-control-feedback {^password_error}hidden{/password_error}" aria-hidden="true"></span>
            </div>
          </div>
        </div>

        <div class="row">
          <div class="col-xs-4 col-sm-3 col-md-3">
            <div class="form-group has-feedback">
              <span id="button-checkbox">
                <button type="button" class="btn control-label" data-color="info" tabindex="8"> I Agree</button>
                <input type="checkbox" name="tc" id="tc" class="hidden" value="1" required>
              </span>
            </div>
          </div>
          <div class="col-xs-8 col-sm-9 col-md-9">
             By clicking <strong class="label label-primary">Register</strong>, you agree to the <a href="#" data-toggle="modal" data-target="#t_and_c_m">Terms and Conditions</a> set out by this site, including our Cookie Use.
          </div>
        </div>
        
        <hr>
        <div class="row">
          <div class="col-xs-12 col-md-6">
            <input type="submit" value="Register" class="btn btn-primary btn-block btn-lg" tabindex="9">
          </div>
          <div class="col-xs-12 col-md-6">
            <a href="/login" class="btn btn-lg">Already have an account?</a>
          </div>
        </div>
        <input type="hidden" name="_csrf" value="{_csrf}"/>
      </form>
    </div>
  </div>

<!-- T&C Modal -->
<div class="modal fade" id="t_and_c_m" tabindex="-1" role="dialog" aria-labelledby="Terms and Conditions" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">Ã—</button>
        <h4 class="modal-title" id="myModalLabel">Terms and Conditions</h4>
      </div>
      <div class="modal-body">
        {terms_and_conditions}
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-primary" data-dismiss="modal">I Agree</button>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

</div>
{/content}

{<script}
<script src="/js/jquery.validate.min.js"></script>
<script>

  $("#regform").validate({
    messages: {
      password: 'The passwords do not match.',
      confirm_password: 'The passwords do not match.',
    },
    submitHandler: function(form) {
      var tc = $("#tc");
      if(!tc.is(':checked')) {
        $("#error_alert_message").html('Please accept the Terms and Conditions.');
        $("#error_alert").removeClass('hidden');
        tc.closest('.form-group').addClass('has-error');
      } else {
        form.submit();
      }
    },
    highlight: function(element) {
      $(element).closest('.form-group').addClass('has-error');
      $(element).siblings('.glyphicon').removeClass('hidden');
    },
    unhighlight: function(element) {
      $(element).closest('.form-group').removeClass('has-error');
      $(element).siblings('.glyphicon').addClass('hidden');
    },
    invalidHandler: function(event, validator) {
      var errors = validator.numberOfInvalids();
      if (errors) {
        var message = errors == 1
          ? 'Please correct the highlighted field.'
          : 'Please correct the highlighted fields.';
        $("#error_alert_message").html(message);
        $("#error_alert").removeClass('hidden');
      } else {
        $("#error_alert").addClass('hidden');
      }
    },
    errorElement: 'span',
    errorClass: 'help-block',
    errorPlacement: function(error, element) {
      if(element.parent('.input-group').length) {
        error.insertAfter(element.parent());
      } else {
        error.insertAfter(element);
      }
    }
  });

  $(function () {
    $('#button-checkbox').each(function () {
      var $widget = $(this),
          $button = $widget.find('button'),
          $checkbox = $widget.find('input:checkbox'),
          color = $button.data('color'),
          settings = {
              on: {
                  icon: 'glyphicon glyphicon-check'
              },
              off: {
                  icon: 'glyphicon glyphicon-unchecked'
              }
          };

      /* Event Handlers */
      $button.on('click', function () {
          $checkbox.prop('checked', !$checkbox.is(':checked'));
          $checkbox.triggerHandler('change');
          updateDisplay();
      });
      $checkbox.on('change', function () {
          updateDisplay();
      });

      /* Actions */
      function updateDisplay() {
          var isChecked = $checkbox.is(':checked');

          /* Set the button's state */
          $button.data('state', (isChecked) ? "on" : "off");

          /* Set the button's icon */
          $button.find('.state-icon')
              .removeClass()
              .addClass('state-icon ' + settings[$button.data('state')].icon);

          /* Update the button's color */
          if (isChecked) {
              $button
                  .removeClass('btn-default')
                  .addClass('btn-' + color + ' active');
          }
          else {
              $button
                  .removeClass('btn-' + color + ' active')
                  .addClass('btn-default');
          }
      }

      /* Initialization */
      function init() {
          updateDisplay();
          if ($button.find('.state-icon').length == 0) {
              $button.prepend('<i class="state-icon ' + settings[$button.data('state')].icon + '"></i>');
          }
      }
      init();
    });
  });
</script>
{/script}
