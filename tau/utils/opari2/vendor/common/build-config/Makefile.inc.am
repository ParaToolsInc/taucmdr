## -*- mode: makefile -*-

## 
## This file is part of the Score-P software (http://www.score-p.org)
##
## Copyright (c) 2009-2011, 
##    RWTH Aachen, Germany
##    Gesellschaft fuer numerische Simulation mbH Braunschweig, Germany
##    Technische Universitaet Dresden, Germany
##    University of Oregon, Eugene, USA
##    Forschungszentrum Juelich GmbH, Germany
##    German Research School for Simulation Sciences GmbH, Juelich/Aachen, Germany
##    Technische Universitaet Muenchen, Germany
##
## See the COPYING file in the package base directory for details.
##

## file       vendor/common/build-config/Makefile.inc.am
## maintainer Christian Roessel <c.roessel@fz-juelich.de>

EXTRA_DIST =
BUILT_SOURCES =
CLEANFILES =
DISTCLEANFILES =

# Testing framework
EXTRA_DIST += $(srcdir)/vendor/common/cutest/CuTest.c \
              $(srcdir)/vendor/common/cutest/CuTest.h

DISTCLEANFILES += $(builddir)/config.summary
DISTCLEANFILES += $(builddir)/@PACKAGE@.summary

CONFIG_STATUS_DEPENDENCIES = $(srcdir)/build-config/VERSION
CONFIGURE_DEPENDENCIES = $(srcdir)/build-config/VERSION

prohibit-svn-files-in-dist:
	@find $(top_distdir) -type d | grep "\.svn"; \
	if [ $$? -eq 0 ]; then \
            echo "ERROR: subversion files found in distribution. This is usually caused by";  \
            echo "referencing directories in EXTRA_DIST. Please specify the files that need"; \
            echo "to go into the distribution explicitly."; \
            exit 1; \
        fi

DOC_SRC_DIR = $(srcdir)/doc

common-uninstall:
	rm -rf $(DESTDIR)$(docdir)
	rm -rf $(DESTDIR)$(datadir)/@PACKAGE@


###############################################################################
## doxygen related targets 
##

## In the following conditional we must distinguish if we are in "developer
## mode", i.e. if we are working on a svn working copy, or if we are in "user
## mode", i.e. we are working on a tarball.
##
## In developer mode we can create doxygen and pdf user documentation (make
## doxygen-user) that will be (automatically) included in the distribution at
## make dist. When creating a distribution, the developer should make sure
## that she has doxygen and related tools e.g. pdflatex in PATH in order to
## generate a complete documentation, see also
## vendor/common/build-config/m4/ac_scorep_doxygen.m4.
##
## make install is ignorant of documentation issues in developer mode.
##
## The user gets ready to install documentation in the tarball, i.e. there is no
## need to run doxygen and pdflatex in user mode. In user mode the provided
## documentation is just copied to a subdirectory of $prefix.

if SVN_CONTROLLED #-----------------------------------------------------------

USER_DOC_DIR = $(top_distdir)$(ac_scorep_doxygen_distdir)/doc

doxygen-user-install:

doxygen-user-generate: doxygen-user-pdf doxygen-user-html-compress copy-revision-file-to-dist

update-revision:
	echo `svnversion $(srcdir)` > "$(srcdir)/build-config/REVISION"

copy-revision-file-to-dist:
	$(MKDIR_P) "$(distdir)/build-config/"
	for i in REVISION REVISION_COMMON; do                                                   \
	    cp -p "$(srcdir)/build-config/$$i" "$(distdir)/build-config/";                      \
	    if grep -E [A-Z] "$(srcdir)/build-config/$$i" ||                                    \
                grep "-" "$(srcdir)/build-config/$$i"; then                                     \
                echo "WARNING: distribution does not match a single, unmodified revision." >&2; \
            fi                                                                                  \
        done

doxygen-user-html-compress:
	if test -d "$(USER_DOC_DIR)/html"; then                               \
	    cd "$(USER_DOC_DIR)"; tar czvf html.tar.gz html; rm -rf html/;    \
	fi

doxygen-project-number: update-revision
	echo "PROJECT_NUMBER = \"@PACKAGE_VERSION@ (revision `cat $(srcdir)/build-config/REVISION`)\"" > doc/doxygen-project-number.cfg

CLEANFILES += doc/doxygen-project-number.cfg

doxygen-user-clean:
	rm -rf $(USER_DOC_DIR)/*


if HAVE_DOXYGEN #-----------------------------------------------------

doxygen-user: doxygen-project-number doc/doxygen-user/main.dox
	$(MKDIR_P) "$(USER_DOC_DIR)/tags"
	echo "OUTPUT_DIRECTORY = $(USER_DOC_DIR)" > doc/doxygen-user-at-make-time.cfg
	echo "GENERATE_TAGFILE = $(USER_DOC_DIR)/tags/@PACKAGE@.tag" >> doc/doxygen-user-at-make-time.cfg
	cat doc/doxygen-project-number.cfg doc/doxygen-user-at-make-time.cfg doc/doxygen-user-common.cfg doc/doxygen-user-component.cfg > doc/doxygen-user.cfg
	$(MKDIR_P) "$(USER_DOC_DIR)/html"
	cp $(abs_srcdir)/doc/images/* $(USER_DOC_DIR)/html
	$(DOXYGEN) doc/doxygen-user.cfg

CLEANFILES += doc/doxygen-user.cfg doc/doxygen-user-at-make-time.cfg doxygen.err

else # i.e. ! HAVE_DOXYGEN -------------------------------------------

doxygen-user:
	echo "WARNING: doxygen not available. Can not generate documentation." >&2

endif # HAVE_DOXYGEN -------------------------------------------------

if HAVE_DOXYGEN_LATEX #-----------------------------------------------

doxygen-user-pdf: doxygen-user
	cat doc/doxygen-user.cfg > doc/doxygen-user-pdf.cfg
	echo "ENABLED_SECTIONS = LATEX" >> doc/doxygen-user-pdf.cfg
	echo "GENERATE_LATEX   = YES"   >> doc/doxygen-user-pdf.cfg
	echo "GENERATE_HTML    = NO"    >> doc/doxygen-user-pdf.cfg
	cp $(abs_srcdir)/vendor/common/build_related/doxygen/scorep.sty $(USER_DOC_DIR)/pdf/
	-cp $(DOC_SRC_DIR)/images/project_logo_large.png $(USER_DOC_DIR)/pdf/
	$(DOXYGEN) doc/doxygen-user-pdf.cfg
	cd "$(USER_DOC_DIR)/pdf" && \
	make &&                     \
	mv refman.pdf ../ &&        \
	rm -f * &&                  \
	mv ../refman.pdf @PACKAGE@.pdf

else # i.e. ! HAVE_DOXYGEN_LATEX -------------------------------------

doxygen-user-pdf: doxygen-user
	echo "WARNING: pdflatex not available. Can not generate doxygen pdf documentation." >&2
	if test -d "$(USER_DOC_DIR)/pdf"; then rm -rf "$(USER_DOC_DIR)/pdf"; fi

endif # HAVE_DOXYGEN_LATEX -------------------------------------------

else # i.e. ! SVN_CONTROLLED -------------------------------------------------

doxygen-user-clean:

doxygen-user-generate:

doxygen-user-pdf:

doxygen-user-install:
	if test -f "$(DOC_SRC_DIR)/html.tar.gz"; then                                   \
            $(MKDIR_P) $(DESTDIR)$(docdir);                                             \
            $(INSTALL_DATA) $(DOC_SRC_DIR)/html.tar.gz $(DESTDIR)$(docdir)/html.tar.gz; \
	    cd $(DESTDIR)$(docdir);                                                     \
            tar xzvf html.tar.gz;                                                       \
	    rm -f html.tar.gz;                                                          \
	fi
	if test -d "$(DOC_SRC_DIR)"; then                                                   \
            cd $(DOC_SRC_DIR);                                                              \
            dirs="pdf tags";                                                                \
            cd -;                                                                           \
            for i in $$dirs; do                                                             \
                if test -d "$(DOC_SRC_DIR)/$$i"; then                                       \
                    $(MKDIR_P) $(DESTDIR)$(docdir)/$$i;                                     \
                    cd $(DOC_SRC_DIR)/$$i;                                                  \
                    files=`find . -type f`;                                                 \
                    cd -;                                                                   \
                    for j in $$files; do                                                    \
                        $(INSTALL_DATA) $(DOC_SRC_DIR)/$$i/$$j $(DESTDIR)$(docdir)/$$i/$$j; \
                    done;                                                                   \
                fi;                                                                         \
            done;                                                                           \
        fi

copy-revision-file-to-dist:

endif # SVN_CONTROLLED 
                                                                             ##
                                                                             ##
###############################################################################


SCOREP_RECURSIVE_TARGETS=


###############################################################################
## code beautification targets 
##
if SVN_CONTROLLED
if HAVE_UNCRUSTIFY

beautify-sp:
	@$(am__cd) $(srcdir) && ./vendor/common/beautifier/beautify
beautify: beautify-recursive
SCOREP_RECURSIVE_TARGETS += beautify-recursive

beautify-clean:

endif # HAVE_UNCRUSTIFY
endif # SVN_CONTROLLED 
                                                                             ##
                                                                             ##
###############################################################################


###############################################################################
## bitten targets, intended to be used from bitten only
##

bitten-copy-tarball-to-prefix: $(distdir).tar.gz
	$(MKDIR_P) $(DESTDIR)$(prefix)
	$(INSTALL_DATA) $(distdir).tar.gz $(DESTDIR)$(prefix)/$(PACKAGE)-latest.tar.gz

bitten-print-environment:
	env
                                                                             ##
                                                                             ##
###############################################################################


###############################################################################
## trigger build of check_* targets here and in subdirectories.
##

check-build-sp: $(BUILT_SOURCES) all-am $(check_PROGRAMS) $(check_LTLIBRARIES)
check-build: check-build-recursive
SCOREP_RECURSIVE_TARGETS += check-build-recursive

                                                                             ##
                                                                             ##
###############################################################################

$(SCOREP_RECURSIVE_TARGETS):
## Using $failcom allows "-k" to keep its natural meaning when running a
## recursive rule.
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-sp"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-sp" || exit 1; \
	fi; test -z "$$fail"
