.\" ** You probably do not want to edit this file directly **
.\" It was generated using the DocBook XSL Stylesheets (version 1.69.1).
.\" Instead of manually editing it, you probably should edit the DocBook XML
.\" source for it and then use the DocBook XSL Stylesheets to regenerate it.
.TH "TAU_COMPILER.SH" "1" "04/25/2011" "" "Tools"
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
tau_compiler.sh \- Instrumenting source files.
.SH "SYNOPSIS"
.HP 16
\fBtau_compiler.sh\fR [\fB\-p\fR\ \fIprofile\fR] [\fB\-optVerbose\fR] [\fB\-optQuiet\fR] [\fB\-optPdtDir=\fR\fIdir\fR] [\fB\-optPdtF95Opts=\fR\fIopts\fR] [\fB\-optPdtF95Reset=\fR\fIopts\fR] [\fB\-optPdtCOpts=\fR\fIopts\fR] [\fB\-optPdtCReset=\fR\fIopts\fR] [\fB\-optPdtCxxOpts=\fR\fIopts\fR] [\fB\-optPdtCReset=\fR\fIopts\fR] [\fB\-optPdtF90Parser=\fR\fIparser\fR] [\fB\-optGnuFortranParser\fR] [\fB\-optGnuCleanscapeParser\fR] [\fB\-optPdtUser=\fR\fIopts\fR] [\fB\-optTauInstr=\fR\fIpath\fR] [\fB\-optDetectMemoryLeaks\fR] [\fB\-optIncludeMemory\fR] [\fB\-optPreProcess\fR] [\fB\-optCPP=\fR\fIpath\fR] [\fB\-optCPPOpts=\fR\fIoptions\fR] [\fB\-optCPPReset=\fR\fIoptions\fR] [\fB\-optTauSelectFile=\fR\fIfile\fR] [\fB\-optPDBFile=\fR\fIfile\fR] [\fB\-optTau=\fR\fIopts\fR] [\fB\-optCompile=\fR\fIopts\fR] [\fB\-optTauDefs=\fR\fIopts\fR] [\fB\-optTauIncludes=\fR\fIopts\fR] [\fB\-optReset=\fR\fIopts\fR] [\fB\-optLinking=\fR\fIopts\fR] [\fB\-optLinkReset=\fR\fIopts\fR] [\fB\-optTauCC=\fR\fIcc\fR] [\fB\-optOpariTool=\fR\fIpath/opari\fR] [\fB\-optOpariDir=\fR\fIpath\fR] [\fB\-optOpariOpts=\fR\fIopts\fR] [\fB\-optOpariReset=\fR\fIopts\fR] [\fB\-optNoMpi\fR] [\fB\-optMpi\fR] [\fB\-optNoRevert\fR] [\fB\-optRevert\fR] [\fB\-optKeepFiles\fR] [\fB\-optAppC\fR] [\fB\-optAppCXX\fR] [\fB\-optAppF90\fR] [\fB\-optShared\fR] [\fB\-optCompInst\fR] [\fB\-optPDTInst\fR] [\fB\-optDisableHeaderInst\fR] {\fIcompiler\fR} [\fIcompiler_options\fR] [\fB\-optTauWrapFile=\fR\fIfilename\fR]
.SH "DESCRIPTION"
.PP
The TAU Compiler provides a simple way to automatically instrument an entire project. The TAU Compiler can be used on C, C++, fixed form Fortran, and free form Fortran.
.SH "OPTIONS"
.PP
\fB\-optVerbose\fR
Turn on verbose debugging messages.
.PP
\fB\-optQuiet\fR
Suppresses excessive output.
.PP
\fB\-optDetectMemoryLeaks\fR
Instructs TAU to detect any memory leaks in C/C++ programs.TAU then tracks the source location of the memory leak as wellas the place in the callstack where the memory allocation wasmade.
.PP
\fB\-optPdtDir=<dir>\fR
The PDT architecture directory. Typically
\fB$(PDTDIR)/$(PDTARCHDIR)\fR.
.PP
\fB\-optPdtF95Opts=<opts>\fR
Options for Fortran parser in PDT (f95parse).
.PP
\fB\-optPdtF95Reset=<opts>\fR
Reset options to the Fortran parser to the given list.
.PP
\fB\-optPdtCOpts=<opts>\fR
Options for C parser in PDT (cparse). Typically
\fB$(TAU_MPI_INCLUDE) $(TAU_INCLUDE) $(TAU_DEFS)\fR.
.PP
\fB\-optPdtCReset=<opts>\fR
Reset options to the C parser to the given list
.PP
\fB\-optPdtCxxOpts=<opts>\fR
Options for C++ parser in PDT (cxxparse). Typically
\fB$(TAU_MPI_INCLUDE) $(TAU_INCLUDE) $(TAU_DEFS)\fR.
.PP
\fB\-optPdtCxxReset=<opts>\fR
Reset options to the C++ parser to the given list
.PP
\fB\-optPdtF90Parser=<parser>\fR
Specify a different Fortran parser. For e.g.,
\fBf90parse\fR
instead of
\fBf95parse\fR.
.PP
\fB\-optGnuFortranParser=<parser>\fR
Specify the GNU
\fBgfortran\fR
Fortran parser
\fBgfparse\fRinstead of
\fBf95parse\fR
.PP
\fB\-optGnuCleanscapeParser\fR
Uses the Cleanscape Fortran parser
\fBf95parse\fRinstead of GNU's
\fBgfparse\fR
.PP
\fB\-optPdtUser=<opts>\fR
Optional arguments for parsing source code.
.PP
\fB\-optTauInstr=<path>\fR
Specify location of tau_instrumentor. Typically
\fB$(TAUROOT)/$(CONFIG_ARCH)/bin/tau_instrumentor\fR.
.PP
\fB\-optIncludeMemory\fR
Forinteral use only
.PP
\fB\-optPreProcess\fR
Preprocess the source code before parsing. Uses /usr/bin/cpp\-P by default.
.PP
\fB\-optCPP=<path>\fR
Specify an alternative preprocessor and pre\-process the sources.
.PP
\fB\-optCPPOpts=<options>\fR
Specify additional options to the C pre\-processor.
.PP
\fB\-optCPPReset=<options>\fR
ResetC preprocessor options to the specified list.
.PP
\fB\-optTauSelectFile=<file>\fR
Specify selective instrumentation file for tau_instrumentor
.PP
\fB\-optPDBFile=<file>\fR
Specify PDB file for tau_instrumentor. Skips parsing stage.
.PP
\fB\-optTau=<opts>\fR
Specify options for tau_instrumentor.
.PP
\fB\-optCompile=<opts>\fR
Options passed to the compiler. Typically
\fB $(TAU_MPI_INCLUDE) $(TAU_INCLUDE) $(TAU_DEFS) \fR.
.PP
\fB\-optTauDefs=<opts>\fR
Options passed to the compiler by TAU. Typically
\fB $(TAU_DEFS) \fR.
.PP
\fB\-optTauIncludes=<opts>\fR
Options passed to the compiler by TAU. Typically
\fB $(TAU_MPI_INCLUDE) $(TAU_INCLUDE) \fR.
.PP
\fB\-optReset=<opts>\fR
Reset options to the compiler to the given list
.PP
\fB\-optLinking=<opts>\fR
Options passed to the linker. Typically
\fB$(TAU_MPI_FLIBS) $(TAU_LIBS) $(TAU_CXXLIBS) \fR.
.PP
\fB\-optLinkReset=<opts>\fR
Reset options to the linker to the given list.
.PP
\fB\-optTauCC=<cc>\fR
Specifies the C compiler used by TAU.
.PP
\fB\-optOpariTool=<path/opari>\fR
Specifies the location of the Opari tool.
.PP
\fB\-optOpariDir=<path>\fR
Specifies the location of the Opari directory.
.PP
\fB\-optOpariOpts=<opts>\fR
Specifies optional arguments to the Opari tool.
.PP
\fB\-optOpariReset=<opts>\fR
Resets options passed to the Opari tool.
.PP
\fB\-optNoMpi\fR
Removes
\fB\-l*mpi*\fR
libraries during linking (default).
.PP
\fB\-optMpi\fR
Does not remove
\fB\-l*mpi*\fR
libraries during linking.
.PP
\fB\-optNoRevert\fR
Exit on error. Does not revert to the original compilation rule on error.
.PP
\fB\-optRevert\fR
Revert to the original compilation rule on error (default).
.PP
\fB\-optKeepFiles\fR
Does not remove intermediate
\fB.pdb\fR
and
\fB.inst.*\fR
files.
.PP
\fB\-optAppCC\fR
Sets the failsafe C compiler.
.PP
\fB\-optAppCXX\fR
Sets the failsafe C++ compiler.
.PP
\fB\-optAppF90\fR
Sets the failsafe F90 compiler
.PP
\fB\-optShared\fR
Use shared library version of TAU
.PP
\fB\-optCompInst\fR
Use compiler\-based instrumentation
.PP
\fB\-optNoCompInst\fR
Do not revert to compiler instrumentation if source instrumentation fails.
.PP
\fB\-optPDTInst\fR
Use PDT\-based instrumentation
.PP
\fB\-optHeaderInst\fR
Enable instrumentation of headers
.PP
\fB\-optDisableHeaderInst\fR
Disable instrumentation of headers
.PP
\fB\-optTrackIO\fR
Specify wrapping of POSIX I/O calls at link time.
.PP
\fB\-optWrappersDir=""\fR
Specify the location of the link wrappers directory.
.PP
\fB\-optTauUseCXXForC\fR
Specifies the use of a C++ compiler for compiling C code
.PP
\fB\-optTauWrapFile=<filename>\fR
Specify path to the link_options.tau file generated by tau_wrap
.PP
\fB\-optFixHashIf\fR
